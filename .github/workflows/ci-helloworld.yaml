# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Continuous Integration - Pull Request"
on: push
jobs:
  Java-Checkstyle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'
    - name: Java Checkstyle
      run: mvn checkstyle:check
  
  Java-Unit-Tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'
    - name: Java Unit Tests
      timeout-minutes: 20
      run: |
        mvn test
    - name: Java Code Coverage
      timeout-minutes: 20
      run: |
        for SERVICE in "balancereader" "ledgerwriter" "transactionhistory"; do
          echo "checking $SERVICE..."
          # save current working dir to memory and cd to src/$SERVICE
          pushd src/$SERVICE
            mvn jacoco:report
            echo "Coverage for $SERVICE:"
            awk -F, \
            '{ instructions += $4 + $5; covered += $5 } END \
            { print covered, "/", instructions, " instructions covered"; \
            print int(100*covered/instructions), "% covered" }' \
            target/site/jacoco/jacoco.csv
          # return to previously saved path
          popd
        done

  Python-Checkstyle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
    - run: pip install pylint
    - run: pylint --rcfile=./.pylintrc ./src/*/*.py

  python-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: mkdir test-reports
      - name: Test Python Services
        uses: actions/setup-python@v4
      - run: |
            for SERVICE in "contacts" "userservice"; do
              echo "testing $SERVICE..."
              # save current working dir to memory and cd to src/$SERVICE
              pushd src/$SERVICE
                python3 -m venv $HOME/venv-$SERVICE
                source $HOME/venv-$SERVICE/bin/activate
                pip install --upgrade pip
                pip install -r requirements.txt
                python -m pytest --junit-xml=../../test-reports/report-${SERVICE}.xml -v -p no:warnings
                deactivate
              # return to previously saved path
              popd
            done
      - name: Store Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
            files: |
              test-reports
      - name: Store Artifacts
        uses: actions/upload-artifact@v3
        with:
           path: test-reports      
  
  retrieve-secrets:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    - uses: actions/checkout@v3
    steps:
      - name: Get Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: https://vault.cera.circleci-labs.com
          role: demo-role
          method: jwt
          path: gh-actions
          secrets: |
            secret/data/cluster/boa-pipeline-dev namespace-gha | NAMESPACE_GHA ;
            secret/data/nexus/boa-deployer password | NEXUS_PASSWORD ; 
            secret/data/nexus/boa-deployer username | NEXUS_USERNAME 
      - run: |
            export DOCKER_TAG=build-foxy+db-gha
            echo "${NEXUS_PASSWORD}" | docker login --username ${NEXUS_USERNAME} --password-stdin docker.nexus.cera.circleci-labs.com
            ./mvnw jib:_skaffold-fail-if-jib-out-of-date -Djib.requiredVersion=1.4.0 --projects src/ledgerwriter --also-make jib:_skaffold-files-v2 --quiet --batch-mode
            mkdir output
            skaffold build --build-concurrency=4 --default-repo=docker.nexus.cera.circleci-labs.com --file-output=output/tags.json
            ls /tmp/
          
             